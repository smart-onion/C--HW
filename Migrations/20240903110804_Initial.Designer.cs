// <auto-generated />
using System;
using HW3;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HW3._2.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20240903110804_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HW3.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DeadlineTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tasks", t =>
                        {
                            t.HasCheckConstraint("CK_Task_Deadline", "[DeadlineTime] >= [CreationTime]");
                        });

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeadlineTime = new DateTime(2024, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "TestDescription",
                            Name = "TestTask",
                            Status = 0
                        },
                        new
                        {
                            Id = -2,
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeadlineTime = new DateTime(2024, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create new Table Task",
                            Name = "Create Table",
                            Status = 0
                        },
                        new
                        {
                            Id = -3,
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeadlineTime = new DateTime(2024, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Make my favorite coffee ",
                            Name = "Make Coffee",
                            Status = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
